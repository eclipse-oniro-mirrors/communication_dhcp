# Copyright (C) 2021-2023 Huawei Device Co., Ltd.
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import("//build/test.gni")
import("//foundation/communication/dhcp/dhcp.gni")

module_output_path = "dhcp/dhcp_native_test"

config("module_private_config") {
  visibility = [ ":*" ]
  include_dirs = [ "$DHCP_ROOT_DIR/services/dhcp_server/include" ]
}

ohos_unittest("dhcp_native_unittest") {
  module_out_path = module_output_path
  sources = [
    "$DHCP_ROOT_DIR/frameworks/native/c_adapter/src/dhcp_c_utils.cpp",
    "$DHCP_ROOT_DIR/frameworks/native/src/dhcp_client_callback_stub.cpp",
    "$DHCP_ROOT_DIR/frameworks/native/src/dhcp_client_proxy.cpp",
    "$DHCP_ROOT_DIR/frameworks/native/src/dhcp_event.cpp",
    "$DHCP_ROOT_DIR/test/fuzztest/fuzz_common_func/mock_dhcp_permission_utils.cpp",
    "dhcp_client_proxy_test.cpp",
  ]

  include_dirs = [
    "$DHCP_ROOT_DIR/frameworks/native/include",
    "$DHCP_ROOT_DIR/services",
    "$DHCP_ROOT_DIR/frameworks/native/include",
    "$DHCP_ROOT_DIR/frameworks/native/interfaces",
    "$DHCP_ROOT_DIR/frameworks/native/src",
    "$DHCP_ROOT_DIR/frameworks/native/c_adapter/inc",
    "$DHCP_ROOT_DIR/interfaces",
    "$DHCP_ROOT_DIR/interfaces/inner_api",
    "$DHCP_ROOT_DIR/interfaces/inner_api/include",
    "$DHCP_ROOT_DIR/interfaces/kits/c",
    "$DHCP_ROOT_DIR/interfaces/services",
    "$DHCP_ROOT_DIR/services/dhcp_server/include",
    "$DHCP_ROOT_DIR/services/dhcp_client/include",
    "$DHCP_ROOT_DIR/services/utils/include",
    "$DHCP_ROOT_DIR/test/fuzztest/fuzz_common_func",
  ]

  cflags = []

  deps = []

  external_deps = [
    "ability_base:want",
    "access_token:libaccesstoken_sdk",
    "access_token:libtokenid_sdk",
    "c_utils:utils",
    "googletest:gmock_main",
    "googletest:gtest_main",
    "hilog:libhilog",
    "ipc:ipc_single",
    "safwk:system_ability_fwk",
    "samgr:samgr_common",
    "samgr:samgr_proxy",
  ]

  ldflags = [
    "-fPIC",
    "-Wl,-E",
    "--coverage",
  ]

  defines = [
    "DHCP_SEL_WAIT_TIMEOUTS=1",
    "private = public",
    "protected = public",
  ]

  part_name = "dhcp"
  subsystem_name = "communication"
  testonly = true
}
